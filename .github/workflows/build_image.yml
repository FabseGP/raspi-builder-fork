on: 
  push

permissions:
  contents: write

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-latest
            target: x86_64-linux-gnu
          - os-name: Linux-aarch64
            runs-on: ubuntu-latest
            target: aarch64-linux-gnu
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git pkg-config \
            zlib1g-dev libnl-3-dev libnl-genl-3-dev libcap-dev libpcap-dev \
            libnm-dev libdw-dev libsqlite3-dev libprotobuf-dev libprotobuf-c-dev \
            protobuf-compiler protobuf-c-compiler libsensors-dev libusb-1.0-0-dev \
            python3 python3-setuptools python3-protobuf python3-requests zlib1g \
            python3-numpy python3-serial python3-usb python3-dev python3-websockets \
            librtlsdr-dev libubertooth-dev libbtbb-dev libmosquitto-dev gcc make zlib1g-dev
          if [[ "${{ matrix.platform.target }}" == "aarch64-linux-gnu" ]]; then
            sudo dpkg --add-architecture arm64
            sudo apt-get update
            sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu zlib1g-dev:arm64
          elif [[ "${{ matrix.platform.target }}" == "x86_64-linux-gnu" ]]; then
            sudo apt-get install -y libwebsockets-dev
          fi
      - name: Checkout Kismet
        uses: actions/checkout@v4
        with:
          ref: kismet-fork
      - name: Compile kismet
        run: |
          if [[ "${{ matrix.platform.target }}" == "x86_64-linux-gnu" ]]; then
            ./configure
          else
            sed -i '1i #include <stdio.h>' capture_sdr_rtladsb_v2/capture_sdr_rtladsb_v2.c
            sed -i 's/-Wno-dangling-reference//g; s/-Wno-unknown-warning-option//g' Makefile.inc.in
            ./configure --disable-libwebsockets --build x86_64-pc-linux-gnu --host ${{ matrix.platform.target }} 
          fi
          make version
          make -j$(nproc)
      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          filename: 'release_${{ matrix.platform.target }}.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig'
      - name: Upload Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "release_${{ matrix.platform.target }}.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          generateReleaseNotes: true
          replacesArtifacts: true


